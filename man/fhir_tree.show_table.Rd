% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fhir_tree.R
\name{fhir_tree.show_table}
\alias{fhir_tree.show_table}
\title{Print wide cast table in tree format}
\usage{
fhir_tree.show_table(
  table,
  brackets,
  resource = "Resource",
  keep_attr = FALSE,
  keep_ids = FALSE,
  skip_one = FALSE,
  prompt = ": "
)
}
\arguments{
\item{table}{A data.frame or data.table as produced by \code{\link[=fhir_crack]{fhir_crack()}} with \code{format="wide"} or \code{\link[=fhir_cast]{fhir_cast()}}}

\item{brackets}{A character of length one. The brackets used in the table.}

\item{resource}{A character vector of length one or \linkS4class{fhir_resource_type} object}

\item{keep_attr}{A logical of length one indicating whether attributes should be displayed or not.}

\item{keep_ids}{A logical of length one indicating whether inidices should be displayed or not.}

\item{skip_one}{A logical of length one indicating whether first index 1 should be displayed or not.}

\item{prompt}{A character of length one use as prompt
indicating which resource type the table is build from.}
}
\description{
This function takes a wide table as created by \code{\link[=fhir_crack]{fhir_crack()}} with \code{format="wide"}and prints the tree structure implicit in the
column names of the tables. It is useful to get an overview over the implied structure when planning to create
FHIR bundles from this table using \code{\link[=fhir_build_bundle]{fhir_build_bundle()}}.
}
\details{
By default, only the first 5 rows are converted to tree structure to prevent the output from getting too long. This
can be changed by setting the argument \code{nrow} to the desired number.
}
\examples{
#' #unserialize example
bundles <- fhir_unserialize(bundles = example_bundles1)

#crack fhir resources
table_desc <- fhir_table_description(
    resource = "Patient",
    brackets = c("[", "]"),
    sep      = " ",
    format   = "wide"
)

df <- fhir_crack(bundles = bundles, design = table_desc)


#show tree
fhir_show_as_tree(table = df, brackets = c("[", "]"), resource = "Patient")
}
\seealso{
\code{\link[=fhir_cast]{fhir_cast()}}, \code{\link[=fhir_build_bundle]{fhir_build_bundle()}}
}
