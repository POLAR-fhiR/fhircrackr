% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sample_resources.R
\name{fhir_get_resources_by_ids}
\alias{fhir_get_resources_by_ids}
\title{Get Resources by their IDs}
\usage{
fhir_get_resources_by_ids(base_url, resource, ids, verbose = 0)
}
\arguments{
\item{base_url}{A character vector of length one specifying the base URL of the FHIR server, e.g. \code{"http://hapi.fhir.org/baseR4"}.}

\item{resource}{A character vector of length one or \linkS4class{fhir_resource_type} object with the resource type to be searched, e.g. \code{"Patient"}.}

\item{ids}{A character vector containing the resource (aka logical) IDs of the resources that should be downloaded.}

\item{verbose}{An integer vector of length 1 containing the level of verbosity. Defaults to 0.}
}
\value{
A \linkS4class{fhir_bundle_list} containing the downloaded resources.
}
\description{
Downloads FHIR resources represented by a vector of resource IDs.
}
\details{
This function takes a character vector \code{ids} containing logical Ids of resources of a given type (specified in \code{resource}) on a
FHIR server (specified in \code{base_url}) and downloads the corresponding resources from the server. The function will attempt to download the resources using a
FHIR search request via POST where the IDs are part of the body. See \code{\link[=fhir_search]{fhir_search()}} for details. If this fails
(e.g. because the server doesn't allow POST operations), the function falls back on a GET request. If the set of ids is too long to fit
into one GET request (i.e. if the request gets longer than 2083 characters), it will be spread across several requests.
}
\examples{
\donttest{
#find IDs of Patient resources representing Homer Simpson
ids <- fhir_get_resource_ids(
  base_url   = 'https://hapi.fhir.org/baseR4',
  resource   = "Patient",
  parameters = "name=Homer&name=Simpson")

#Download all corresponding resources
bundles <- fhir_get_resources_by_ids(
  base_url = 'https://hapi.fhir.org/baseR4',
  resource = "Patient",
  ids      = ids)

#have a look at the resources
fhir_crack(
  bundles,
  fhir_table_description(
    resource = "Patient",
    cols     = list(
      ID      = "id",
      given   = "name/given",
      family = "name/family")))
}
}
